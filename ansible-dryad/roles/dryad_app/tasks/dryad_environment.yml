---
- name: Install useful command-line tools
  apt: pkg={{ item }} state=installed update-cache=yes
#  async: 60
#  poll: 60
  with_items:
    - emacs
    - ack-grep
    - python-pip
    - mailutils

- name: Force pip to upgrade itself
  shell: pip install --upgrade pip -i https://pypi.org/simple/
  become: yes

#  shell: ln -s /usr/local/bin/pip /usr/bin/
- name: Link new pip into the path
  file: src="/usr/local/bin/pip" dest="/usr/bin/pip" state=link

- name: Clone dryad-utils repo
  git: repo=https://github.com/{{ dryad.github_user }}/dryad-utils.git
       dest="{{ dryad.user_home }}/dryad-utils"
       accept_hostkey=yes
  become: no

- name: Copy pip requirements into place
  template: src=requirements.txt.j2 dest="{{ dryad.user_home }}/requirements.txt" mode=0600 owner={{ dryad.user }}
  remote_user: "{{ dryad.user }}"

- name: Install python packages
  pip: 
    requirements: "{{ dryad.user_home }}/requirements.txt"
  become: yes
  
- name: Create hidden dir for AWS
  file: path={{ dryad.user_home }}/.aws state=directory owner={{ dryad.user }} mode=0755
  
- name: Install AWS config file
  template: src=aws_config.j2 dest="{{ dryad.user_home }}/.aws/config" mode=0600 owner={{ dryad.user }}
  remote_user: "{{ dryad.user }}"

- name: Install AWS credentials file
  template: src=aws_credentials.j2 dest="{{ dryad.user_home }}/.aws/credentials" mode=0600 owner={{ dryad.user }}
  remote_user: "{{ dryad.user }}"

- name: Register with AWS OpsWorks on first login
  template: src=aws_opsworks.sh.j2 dest="{{ dryad.user_home }}/.aws/aws_opsworks.sh" mode=0755
  become: no
